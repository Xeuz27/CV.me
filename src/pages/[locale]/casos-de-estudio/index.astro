---
import Section from "@components/Section.astro";
import Layout from "@layouts/Layout.astro";

import { getCasos, getLangFromUrl } from "@utils/i18n";
import { getReadingTime } from "@utils/readTime";

const casos = await getCasos(Astro.currentLocale);
export async function getStaticPaths() {
  // Define the languages you want to support
  return [{ params: { locale: "en" } }, { params: { locale: "es" } }];
}
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
let currentLocale = getLangFromUrl(canonicalURL);
let locales = ["es", "en"];

export const prerender = true;
---

<Layout
  title={currentLocale === "es"
    ? "Conoce Nuestros Casos de Estudio y Exito con distintas marcas"
    : "Discover all of our case Studies with different brands"}
  description={currentLocale === "es"
    ? "En esta Seccion encontraras una serie de articulos de interes sobre como nuestros servicios te ayudaran a escalar tus ventas! ¡Haz Click para saber mas!"
    : "On This Page You will Find a series of Articles showing you how we will Sky Rocket your Sellings. Click here to find Out!"}
  ogImage="https://ik.imagekit.io/0oguwfou0i/yi-printable-portfolio?updatedAt=1707175630120"
>
  <Fragment slot="head">
    <!-- Canonical URL -->
    <link rel="canonical" href={canonicalURL} hreflang={currentLocale} />
    <!-- Alternate Links -->
    {
      locales
        .filter((locale) => locale !== currentLocale)
        .map((locale) => {
          return (
            <link
              rel="alternate"
              href={canonicalURL.href.replace(currentLocale, locale)}
              hreflang={locale}
            />
          );
        })
    }
    <link
      rel="alternate"
      href="https://yidev.vercel.app/es/casos-de-estudio"
      hreflang="x-default"
    />
  </Fragment>
  <main slot="default-slot" class="container mx-auto p-4 sm:p-16 print:p-0">
    <h1 class="mb-12 text-center text-5xl font-bold text-mainTitle">
      {Astro.currentLocale === "en" ? "Case Studies" : "Casos De Estudio"}
    </h1>
    <Section>
      <ul class="grid gap-6 md:grid-cols-1">
        {
          casos.map((caso) => {
            const { slug, data, body } = caso;
            const { title, author, img, description } = data;

            const readTime = getReadingTime(body);

            return (
              <li>
                <article class="flex gap-4 max-md:flex-col md:max-h-96 ">
                  <a
                    title={`ver caso de estudio de ${slug}`}
                    href={`/${Astro.currentLocale}/casos-de-estudio/${slug}`}
                    class="mb-2 transition hover:scale-110 xl:mb-0"
                  >
                    {/* // transition:name={`img-${slug}`} -> when transitioned stays on top of the page ??? not fixable with z-index */}
                    <img
                      class="mx-auto w-[430px] min-w-64 rounded "
                      src={`${img}`}
                      alt={title}
                    />
                  </a>
                  <a
                    title={`ver caso de estudio de ${slug}`}
                    href={`/${Astro.currentLocale}/casos-de-estudio/${slug}`}
                  >
                    <div class="flex flex-col justify-center">
                      <span
                        transition:name={`title-${slug}`}
                        class="-z-10 mb-2 text-xl font-bold leading-tight text-sectionTitle"
                      >
                        {title}
                      </span>

                      <p class="mb-4">{description}</p>
                      <span class="text-xs text-gray-200">
                        {readTime} minutos de lectura ⏳
                      </span>
                    </div>
                  </a>
                </article>
              </li>
            );
          })
        }
      </ul>
    </Section>
  </main>
</Layout>
